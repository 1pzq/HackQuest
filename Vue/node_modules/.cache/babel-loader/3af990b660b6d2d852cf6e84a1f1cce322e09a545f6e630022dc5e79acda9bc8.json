{"ast":null,"code":"import _slicedToArray from \"/Users/puzhiqiu/\\u5DE5\\u7A0B\\u9879\\u76EE/HackQuest/HackQuest/vue/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { watch, computed, defineComponent } from \"vue\";\nimport { pick, extend, truthProp, createNamespace } from \"../utils/index.mjs\";\nimport { CHECKBOX_GROUP_KEY } from \"../checkbox-group/CheckboxGroup.mjs\";\nimport { useParent, useCustomFieldValue } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport Checker, { checkerProps } from \"./Checker.mjs\";\nvar _createNamespace = createNamespace(\"checkbox\"),\n  _createNamespace2 = _slicedToArray(_createNamespace, 2),\n  name = _createNamespace2[0],\n  bem = _createNamespace2[1];\nvar checkboxProps = extend({}, checkerProps, {\n  shape: String,\n  bindGroup: truthProp,\n  indeterminate: {\n    type: Boolean,\n    \"default\": null\n  }\n});\nvar stdin_default = defineComponent({\n  name: name,\n  props: checkboxProps,\n  emits: [\"change\", \"update:modelValue\"],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n      slots = _ref.slots;\n    var _useParent = useParent(CHECKBOX_GROUP_KEY),\n      parent = _useParent.parent;\n    var setParentValue = function setParentValue(checked2) {\n      var name2 = props.name;\n      var _parent$props = parent.props,\n        max = _parent$props.max,\n        modelValue = _parent$props.modelValue;\n      var value = modelValue.slice();\n      if (checked2) {\n        var overlimit = max && value.length >= +max;\n        if (!overlimit && !value.includes(name2)) {\n          value.push(name2);\n          if (props.bindGroup) {\n            parent.updateValue(value);\n          }\n        }\n      } else {\n        var index = value.indexOf(name2);\n        if (index !== -1) {\n          value.splice(index, 1);\n          if (props.bindGroup) {\n            parent.updateValue(value);\n          }\n        }\n      }\n    };\n    var checked = computed(function () {\n      if (parent && props.bindGroup) {\n        return parent.props.modelValue.indexOf(props.name) !== -1;\n      }\n      return !!props.modelValue;\n    });\n    var toggle = function toggle() {\n      var newValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !checked.value;\n      if (parent && props.bindGroup) {\n        setParentValue(newValue);\n      } else {\n        emit(\"update:modelValue\", newValue);\n      }\n      if (props.indeterminate !== null) emit(\"change\", newValue);\n    };\n    watch(function () {\n      return props.modelValue;\n    }, function (value) {\n      if (props.indeterminate === null) emit(\"change\", value);\n    });\n    useExpose({\n      toggle: toggle,\n      props: props,\n      checked: checked\n    });\n    useCustomFieldValue(function () {\n      return props.modelValue;\n    });\n    return function () {\n      return _createVNode(Checker, _mergeProps({\n        \"bem\": bem,\n        \"role\": \"checkbox\",\n        \"parent\": parent,\n        \"checked\": checked.value,\n        \"onToggle\": toggle\n      }, props), pick(slots, [\"default\", \"icon\"]));\n    };\n  }\n});\nexport { checkboxProps, stdin_default as default };","map":{"version":3,"names":["createVNode","_createVNode","mergeProps","_mergeProps","watch","computed","defineComponent","pick","extend","truthProp","createNamespace","CHECKBOX_GROUP_KEY","useParent","useCustomFieldValue","useExpose","Checker","checkerProps","name","bem","checkboxProps","shape","String","bindGroup","indeterminate","type","Boolean","stdin_default","props","emits","setup","emit","slots","parent","setParentValue","checked2","name2","max","modelValue","value","slice","overlimit","length","includes","push","updateValue","index","indexOf","splice","checked","toggle","newValue","default"],"sources":["/Users/puzhiqiu/工程项目/HackQuest/HackQuest/vue/node_modules/vant/es/checkbox/Checkbox.mjs"],"sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { watch, computed, defineComponent } from \"vue\";\nimport { pick, extend, truthProp, createNamespace } from \"../utils/index.mjs\";\nimport { CHECKBOX_GROUP_KEY } from \"../checkbox-group/CheckboxGroup.mjs\";\nimport { useParent, useCustomFieldValue } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport Checker, { checkerProps } from \"./Checker.mjs\";\nconst [name, bem] = createNamespace(\"checkbox\");\nconst checkboxProps = extend({}, checkerProps, {\n  shape: String,\n  bindGroup: truthProp,\n  indeterminate: {\n    type: Boolean,\n    default: null\n  }\n});\nvar stdin_default = defineComponent({\n  name,\n  props: checkboxProps,\n  emits: [\"change\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      parent\n    } = useParent(CHECKBOX_GROUP_KEY);\n    const setParentValue = (checked2) => {\n      const {\n        name: name2\n      } = props;\n      const {\n        max,\n        modelValue\n      } = parent.props;\n      const value = modelValue.slice();\n      if (checked2) {\n        const overlimit = max && value.length >= +max;\n        if (!overlimit && !value.includes(name2)) {\n          value.push(name2);\n          if (props.bindGroup) {\n            parent.updateValue(value);\n          }\n        }\n      } else {\n        const index = value.indexOf(name2);\n        if (index !== -1) {\n          value.splice(index, 1);\n          if (props.bindGroup) {\n            parent.updateValue(value);\n          }\n        }\n      }\n    };\n    const checked = computed(() => {\n      if (parent && props.bindGroup) {\n        return parent.props.modelValue.indexOf(props.name) !== -1;\n      }\n      return !!props.modelValue;\n    });\n    const toggle = (newValue = !checked.value) => {\n      if (parent && props.bindGroup) {\n        setParentValue(newValue);\n      } else {\n        emit(\"update:modelValue\", newValue);\n      }\n      if (props.indeterminate !== null)\n        emit(\"change\", newValue);\n    };\n    watch(() => props.modelValue, (value) => {\n      if (props.indeterminate === null)\n        emit(\"change\", value);\n    });\n    useExpose({\n      toggle,\n      props,\n      checked\n    });\n    useCustomFieldValue(() => props.modelValue);\n    return () => _createVNode(Checker, _mergeProps({\n      \"bem\": bem,\n      \"role\": \"checkbox\",\n      \"parent\": parent,\n      \"checked\": checked.value,\n      \"onToggle\": toggle\n    }, props), pick(slots, [\"default\", \"icon\"]));\n  }\n});\nexport {\n  checkboxProps,\n  stdin_default as default\n};\n"],"mappings":";;;;;;;;AAAA,SAASA,WAAW,IAAIC,YAAY,EAAEC,UAAU,IAAIC,WAAW,QAAQ,KAAK;AAC5E,SAASC,KAAK,EAAEC,QAAQ,EAAEC,eAAe,QAAQ,KAAK;AACtD,SAASC,IAAI,EAAEC,MAAM,EAAEC,SAAS,EAAEC,eAAe,QAAQ,oBAAoB;AAC7E,SAASC,kBAAkB,QAAQ,qCAAqC;AACxE,SAASC,SAAS,EAAEC,mBAAmB,QAAQ,WAAW;AAC1D,SAASC,SAAS,QAAQ,+BAA+B;AACzD,OAAOC,OAAO,IAAIC,YAAY,QAAQ,eAAe;AACrD,uBAAoBN,eAAe,CAAC,UAAU,CAAC;EAAA;EAAxCO,IAAI;EAAEC,GAAG;AAChB,IAAMC,aAAa,GAAGX,MAAM,CAAC,CAAC,CAAC,EAAEQ,YAAY,EAAE;EAC7CI,KAAK,EAAEC,MAAM;EACbC,SAAS,EAAEb,SAAS;EACpBc,aAAa,EAAE;IACbC,IAAI,EAAEC,OAAO;IACb,WAAS;EACX;AACF,CAAC,CAAC;AACF,IAAIC,aAAa,GAAGpB,eAAe,CAAC;EAClCW,IAAI,EAAJA,IAAI;EACJU,KAAK,EAAER,aAAa;EACpBS,KAAK,EAAE,CAAC,QAAQ,EAAE,mBAAmB,CAAC;EACtCC,KAAK,iBAACF,KAAK,QAGR;IAAA,IAFDG,IAAI,QAAJA,IAAI;MACJC,KAAK,QAALA,KAAK;IAEL,iBAEInB,SAAS,CAACD,kBAAkB,CAAC;MAD/BqB,MAAM,cAANA,MAAM;IAER,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,QAAQ,EAAK;MACnC,IACQC,KAAK,GACTR,KAAK,CADPV,IAAI;MAEN,oBAGIe,MAAM,CAACL,KAAK;QAFdS,GAAG,iBAAHA,GAAG;QACHC,UAAU,iBAAVA,UAAU;MAEZ,IAAMC,KAAK,GAAGD,UAAU,CAACE,KAAK,EAAE;MAChC,IAAIL,QAAQ,EAAE;QACZ,IAAMM,SAAS,GAAGJ,GAAG,IAAIE,KAAK,CAACG,MAAM,IAAI,CAACL,GAAG;QAC7C,IAAI,CAACI,SAAS,IAAI,CAACF,KAAK,CAACI,QAAQ,CAACP,KAAK,CAAC,EAAE;UACxCG,KAAK,CAACK,IAAI,CAACR,KAAK,CAAC;UACjB,IAAIR,KAAK,CAACL,SAAS,EAAE;YACnBU,MAAM,CAACY,WAAW,CAACN,KAAK,CAAC;UAC3B;QACF;MACF,CAAC,MAAM;QACL,IAAMO,KAAK,GAAGP,KAAK,CAACQ,OAAO,CAACX,KAAK,CAAC;QAClC,IAAIU,KAAK,KAAK,CAAC,CAAC,EAAE;UAChBP,KAAK,CAACS,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;UACtB,IAAIlB,KAAK,CAACL,SAAS,EAAE;YACnBU,MAAM,CAACY,WAAW,CAACN,KAAK,CAAC;UAC3B;QACF;MACF;IACF,CAAC;IACD,IAAMU,OAAO,GAAG3C,QAAQ,CAAC,YAAM;MAC7B,IAAI2B,MAAM,IAAIL,KAAK,CAACL,SAAS,EAAE;QAC7B,OAAOU,MAAM,CAACL,KAAK,CAACU,UAAU,CAACS,OAAO,CAACnB,KAAK,CAACV,IAAI,CAAC,KAAK,CAAC,CAAC;MAC3D;MACA,OAAO,CAAC,CAACU,KAAK,CAACU,UAAU;IAC3B,CAAC,CAAC;IACF,IAAMY,MAAM,GAAG,SAATA,MAAM,GAAkC;MAAA,IAA9BC,QAAQ,uEAAG,CAACF,OAAO,CAACV,KAAK;MACvC,IAAIN,MAAM,IAAIL,KAAK,CAACL,SAAS,EAAE;QAC7BW,cAAc,CAACiB,QAAQ,CAAC;MAC1B,CAAC,MAAM;QACLpB,IAAI,CAAC,mBAAmB,EAAEoB,QAAQ,CAAC;MACrC;MACA,IAAIvB,KAAK,CAACJ,aAAa,KAAK,IAAI,EAC9BO,IAAI,CAAC,QAAQ,EAAEoB,QAAQ,CAAC;IAC5B,CAAC;IACD9C,KAAK,CAAC;MAAA,OAAMuB,KAAK,CAACU,UAAU;IAAA,GAAE,UAACC,KAAK,EAAK;MACvC,IAAIX,KAAK,CAACJ,aAAa,KAAK,IAAI,EAC9BO,IAAI,CAAC,QAAQ,EAAEQ,KAAK,CAAC;IACzB,CAAC,CAAC;IACFxB,SAAS,CAAC;MACRmC,MAAM,EAANA,MAAM;MACNtB,KAAK,EAALA,KAAK;MACLqB,OAAO,EAAPA;IACF,CAAC,CAAC;IACFnC,mBAAmB,CAAC;MAAA,OAAMc,KAAK,CAACU,UAAU;IAAA,EAAC;IAC3C,OAAO;MAAA,OAAMpC,YAAY,CAACc,OAAO,EAAEZ,WAAW,CAAC;QAC7C,KAAK,EAAEe,GAAG;QACV,MAAM,EAAE,UAAU;QAClB,QAAQ,EAAEc,MAAM;QAChB,SAAS,EAAEgB,OAAO,CAACV,KAAK;QACxB,UAAU,EAAEW;MACd,CAAC,EAAEtB,KAAK,CAAC,EAAEpB,IAAI,CAACwB,KAAK,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;IAAA;EAC9C;AACF,CAAC,CAAC;AACF,SACEZ,aAAa,EACbO,aAAa,IAAIyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}