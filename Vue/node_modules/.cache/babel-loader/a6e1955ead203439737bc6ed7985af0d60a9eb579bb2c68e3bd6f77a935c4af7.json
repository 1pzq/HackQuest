{"ast":null,"code":"import _slicedToArray from \"/Users/puzhiqiu/\\u5DE5\\u7A0B\\u9879\\u76EE/HackQuest/HackQuest/vue/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { watch, defineComponent } from \"vue\";\nimport { numericProp, makeArrayProp, makeStringProp, createNamespace } from \"../utils/index.mjs\";\nimport { useChildren, useCustomFieldValue } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nvar _createNamespace = createNamespace(\"checkbox-group\"),\n  _createNamespace2 = _slicedToArray(_createNamespace, 2),\n  name = _createNamespace2[0],\n  bem = _createNamespace2[1];\nvar checkboxGroupProps = {\n  max: numericProp,\n  shape: makeStringProp(\"round\"),\n  disabled: Boolean,\n  iconSize: numericProp,\n  direction: String,\n  modelValue: makeArrayProp(),\n  checkedColor: String\n};\nvar CHECKBOX_GROUP_KEY = Symbol(name);\nvar stdin_default = defineComponent({\n  name: name,\n  props: checkboxGroupProps,\n  emits: [\"change\", \"update:modelValue\"],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n      slots = _ref.slots;\n    var _useChildren = useChildren(CHECKBOX_GROUP_KEY),\n      children = _useChildren.children,\n      linkChildren = _useChildren.linkChildren;\n    var updateValue = function updateValue(value) {\n      return emit(\"update:modelValue\", value);\n    };\n    var toggleAll = function toggleAll() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (typeof options === \"boolean\") {\n        options = {\n          checked: options\n        };\n      }\n      var _options = options,\n        checked = _options.checked,\n        skipDisabled = _options.skipDisabled;\n      var checkedChildren = children.filter(function (item) {\n        if (!item.props.bindGroup) {\n          return false;\n        }\n        if (item.props.disabled && skipDisabled) {\n          return item.checked.value;\n        }\n        return checked != null ? checked : !item.checked.value;\n      });\n      var names = checkedChildren.map(function (item) {\n        return item.name;\n      });\n      updateValue(names);\n    };\n    watch(function () {\n      return props.modelValue;\n    }, function (value) {\n      return emit(\"change\", value);\n    });\n    useExpose({\n      toggleAll: toggleAll\n    });\n    useCustomFieldValue(function () {\n      return props.modelValue;\n    });\n    linkChildren({\n      props: props,\n      updateValue: updateValue\n    });\n    return function () {\n      var _a;\n      return _createVNode(\"div\", {\n        \"class\": bem([props.direction])\n      }, [(_a = slots[\"default\"]) == null ? void 0 : _a.call(slots)]);\n    };\n  }\n});\nexport { CHECKBOX_GROUP_KEY, checkboxGroupProps, stdin_default as default };","map":{"version":3,"names":["createVNode","_createVNode","watch","defineComponent","numericProp","makeArrayProp","makeStringProp","createNamespace","useChildren","useCustomFieldValue","useExpose","name","bem","checkboxGroupProps","max","shape","disabled","Boolean","iconSize","direction","String","modelValue","checkedColor","CHECKBOX_GROUP_KEY","Symbol","stdin_default","props","emits","setup","emit","slots","children","linkChildren","updateValue","value","toggleAll","options","checked","skipDisabled","checkedChildren","filter","item","bindGroup","names","map","_a","call","default"],"sources":["/Users/puzhiqiu/工程项目/HackQuest/HackQuest/vue/node_modules/vant/es/checkbox-group/CheckboxGroup.mjs"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { watch, defineComponent } from \"vue\";\nimport { numericProp, makeArrayProp, makeStringProp, createNamespace } from \"../utils/index.mjs\";\nimport { useChildren, useCustomFieldValue } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nconst [name, bem] = createNamespace(\"checkbox-group\");\nconst checkboxGroupProps = {\n  max: numericProp,\n  shape: makeStringProp(\"round\"),\n  disabled: Boolean,\n  iconSize: numericProp,\n  direction: String,\n  modelValue: makeArrayProp(),\n  checkedColor: String\n};\nconst CHECKBOX_GROUP_KEY = Symbol(name);\nvar stdin_default = defineComponent({\n  name,\n  props: checkboxGroupProps,\n  emits: [\"change\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      children,\n      linkChildren\n    } = useChildren(CHECKBOX_GROUP_KEY);\n    const updateValue = (value) => emit(\"update:modelValue\", value);\n    const toggleAll = (options = {}) => {\n      if (typeof options === \"boolean\") {\n        options = {\n          checked: options\n        };\n      }\n      const {\n        checked,\n        skipDisabled\n      } = options;\n      const checkedChildren = children.filter((item) => {\n        if (!item.props.bindGroup) {\n          return false;\n        }\n        if (item.props.disabled && skipDisabled) {\n          return item.checked.value;\n        }\n        return checked != null ? checked : !item.checked.value;\n      });\n      const names = checkedChildren.map((item) => item.name);\n      updateValue(names);\n    };\n    watch(() => props.modelValue, (value) => emit(\"change\", value));\n    useExpose({\n      toggleAll\n    });\n    useCustomFieldValue(() => props.modelValue);\n    linkChildren({\n      props,\n      updateValue\n    });\n    return () => {\n      var _a;\n      return _createVNode(\"div\", {\n        \"class\": bem([props.direction])\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n  }\n});\nexport {\n  CHECKBOX_GROUP_KEY,\n  checkboxGroupProps,\n  stdin_default as default\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}