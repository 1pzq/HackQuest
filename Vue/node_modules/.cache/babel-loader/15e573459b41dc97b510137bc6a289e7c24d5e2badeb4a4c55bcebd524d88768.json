{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { extend, inBrowser } from \"../utils/index.mjs\";\nimport { mountComponent, usePopupState } from \"../utils/mount-component.mjs\";\nimport Dialog from \"./Dialog.mjs\";\nvar instance;\nvar DEFAULT_OPTIONS = {\n  title: \"\",\n  width: \"\",\n  theme: null,\n  message: \"\",\n  overlay: true,\n  callback: null,\n  teleport: \"body\",\n  className: \"\",\n  allowHtml: false,\n  lockScroll: true,\n  transition: void 0,\n  beforeClose: null,\n  overlayClass: \"\",\n  overlayStyle: void 0,\n  messageAlign: \"\",\n  cancelButtonText: \"\",\n  cancelButtonColor: null,\n  cancelButtonDisabled: false,\n  confirmButtonText: \"\",\n  confirmButtonColor: null,\n  confirmButtonDisabled: false,\n  showConfirmButton: true,\n  showCancelButton: false,\n  closeOnPopstate: true,\n  closeOnClickOverlay: false\n};\nvar currentOptions = extend({}, DEFAULT_OPTIONS);\nfunction initInstance() {\n  var Wrapper = {\n    setup: function setup() {\n      var _usePopupState = usePopupState(),\n        state = _usePopupState.state,\n        toggle = _usePopupState.toggle;\n      return function () {\n        return _createVNode(Dialog, _mergeProps(state, {\n          \"onUpdate:show\": toggle\n        }), null);\n      };\n    }\n  };\n  var _mountComponent = mountComponent(Wrapper);\n  instance = _mountComponent.instance;\n}\nfunction showDialog(options) {\n  if (!inBrowser) {\n    return Promise.resolve(void 0);\n  }\n  return new Promise(function (resolve, reject) {\n    if (!instance) {\n      initInstance();\n    }\n    instance.open(extend({}, currentOptions, options, {\n      callback: function callback(action) {\n        (action === \"confirm\" ? resolve : reject)(action);\n      }\n    }));\n  });\n}\nvar setDialogDefaultOptions = function setDialogDefaultOptions(options) {\n  extend(currentOptions, options);\n};\nvar resetDialogDefaultOptions = function resetDialogDefaultOptions() {\n  currentOptions = extend({}, DEFAULT_OPTIONS);\n};\nvar showConfirmDialog = function showConfirmDialog(options) {\n  return showDialog(extend({\n    showCancelButton: true\n  }, options));\n};\nvar closeDialog = function closeDialog() {\n  if (instance) {\n    instance.toggle(false);\n  }\n};\nexport { closeDialog, resetDialogDefaultOptions, setDialogDefaultOptions, showConfirmDialog, showDialog };","map":{"version":3,"names":["createVNode","_createVNode","mergeProps","_mergeProps","extend","inBrowser","mountComponent","usePopupState","Dialog","instance","DEFAULT_OPTIONS","title","width","theme","message","overlay","callback","teleport","className","allowHtml","lockScroll","transition","beforeClose","overlayClass","overlayStyle","messageAlign","cancelButtonText","cancelButtonColor","cancelButtonDisabled","confirmButtonText","confirmButtonColor","confirmButtonDisabled","showConfirmButton","showCancelButton","closeOnPopstate","closeOnClickOverlay","currentOptions","initInstance","Wrapper","setup","state","toggle","showDialog","options","Promise","resolve","reject","open","action","setDialogDefaultOptions","resetDialogDefaultOptions","showConfirmDialog","closeDialog"],"sources":["/Users/puzhiqiu/工程项目/HackQuest/HackQuest/vue/node_modules/vant/es/dialog/function-call.mjs"],"sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { extend, inBrowser } from \"../utils/index.mjs\";\nimport { mountComponent, usePopupState } from \"../utils/mount-component.mjs\";\nimport Dialog from \"./Dialog.mjs\";\nlet instance;\nconst DEFAULT_OPTIONS = {\n  title: \"\",\n  width: \"\",\n  theme: null,\n  message: \"\",\n  overlay: true,\n  callback: null,\n  teleport: \"body\",\n  className: \"\",\n  allowHtml: false,\n  lockScroll: true,\n  transition: void 0,\n  beforeClose: null,\n  overlayClass: \"\",\n  overlayStyle: void 0,\n  messageAlign: \"\",\n  cancelButtonText: \"\",\n  cancelButtonColor: null,\n  cancelButtonDisabled: false,\n  confirmButtonText: \"\",\n  confirmButtonColor: null,\n  confirmButtonDisabled: false,\n  showConfirmButton: true,\n  showCancelButton: false,\n  closeOnPopstate: true,\n  closeOnClickOverlay: false\n};\nlet currentOptions = extend({}, DEFAULT_OPTIONS);\nfunction initInstance() {\n  const Wrapper = {\n    setup() {\n      const {\n        state,\n        toggle\n      } = usePopupState();\n      return () => _createVNode(Dialog, _mergeProps(state, {\n        \"onUpdate:show\": toggle\n      }), null);\n    }\n  };\n  ({\n    instance\n  } = mountComponent(Wrapper));\n}\nfunction showDialog(options) {\n  if (!inBrowser) {\n    return Promise.resolve(void 0);\n  }\n  return new Promise((resolve, reject) => {\n    if (!instance) {\n      initInstance();\n    }\n    instance.open(extend({}, currentOptions, options, {\n      callback: (action) => {\n        (action === \"confirm\" ? resolve : reject)(action);\n      }\n    }));\n  });\n}\nconst setDialogDefaultOptions = (options) => {\n  extend(currentOptions, options);\n};\nconst resetDialogDefaultOptions = () => {\n  currentOptions = extend({}, DEFAULT_OPTIONS);\n};\nconst showConfirmDialog = (options) => showDialog(extend({\n  showCancelButton: true\n}, options));\nconst closeDialog = () => {\n  if (instance) {\n    instance.toggle(false);\n  }\n};\nexport {\n  closeDialog,\n  resetDialogDefaultOptions,\n  setDialogDefaultOptions,\n  showConfirmDialog,\n  showDialog\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}