{"ast":null,"code":"import \"core-js/modules/web.timers.js\";\nimport { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { extend, isObject, inBrowser } from \"../utils/index.mjs\";\nimport { mountComponent, usePopupState } from \"../utils/mount-component.mjs\";\nimport VanNotify from \"./Notify.mjs\";\nvar timer;\nvar instance;\nvar parseOptions = function parseOptions(message) {\n  return isObject(message) ? message : {\n    message: message\n  };\n};\nfunction initInstance() {\n  var _mountComponent = mountComponent({\n    setup: function setup() {\n      var _usePopupState = usePopupState(),\n        state = _usePopupState.state,\n        toggle = _usePopupState.toggle;\n      return function () {\n        return _createVNode(VanNotify, _mergeProps(state, {\n          \"onUpdate:show\": toggle\n        }), null);\n      };\n    }\n  });\n  instance = _mountComponent.instance;\n}\nvar getDefaultOptions = function getDefaultOptions() {\n  return {\n    type: \"danger\",\n    color: void 0,\n    message: \"\",\n    onClose: void 0,\n    onClick: void 0,\n    onOpened: void 0,\n    duration: 3e3,\n    position: void 0,\n    className: \"\",\n    lockScroll: false,\n    background: void 0\n  };\n};\nvar currentOptions = getDefaultOptions();\nvar closeNotify = function closeNotify() {\n  if (instance) {\n    instance.toggle(false);\n  }\n};\nfunction showNotify(options) {\n  if (!inBrowser) {\n    return;\n  }\n  if (!instance) {\n    initInstance();\n  }\n  options = extend({}, currentOptions, parseOptions(options));\n  instance.open(options);\n  clearTimeout(timer);\n  if (options.duration > 0) {\n    timer = setTimeout(closeNotify, options.duration);\n  }\n  return instance;\n}\nvar setNotifyDefaultOptions = function setNotifyDefaultOptions(options) {\n  return extend(currentOptions, options);\n};\nvar resetNotifyDefaultOptions = function resetNotifyDefaultOptions() {\n  currentOptions = getDefaultOptions();\n};\nexport { closeNotify, resetNotifyDefaultOptions, setNotifyDefaultOptions, showNotify };","map":{"version":3,"names":["createVNode","_createVNode","mergeProps","_mergeProps","extend","isObject","inBrowser","mountComponent","usePopupState","VanNotify","timer","instance","parseOptions","message","initInstance","setup","state","toggle","getDefaultOptions","type","color","onClose","onClick","onOpened","duration","position","className","lockScroll","background","currentOptions","closeNotify","showNotify","options","open","clearTimeout","setTimeout","setNotifyDefaultOptions","resetNotifyDefaultOptions"],"sources":["/Users/puzhiqiu/工程项目/HackQuest/HackQuest/vue/node_modules/vant/es/notify/function-call.mjs"],"sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { extend, isObject, inBrowser } from \"../utils/index.mjs\";\nimport { mountComponent, usePopupState } from \"../utils/mount-component.mjs\";\nimport VanNotify from \"./Notify.mjs\";\nlet timer;\nlet instance;\nconst parseOptions = (message) => isObject(message) ? message : {\n  message\n};\nfunction initInstance() {\n  ({\n    instance\n  } = mountComponent({\n    setup() {\n      const {\n        state,\n        toggle\n      } = usePopupState();\n      return () => _createVNode(VanNotify, _mergeProps(state, {\n        \"onUpdate:show\": toggle\n      }), null);\n    }\n  }));\n}\nconst getDefaultOptions = () => ({\n  type: \"danger\",\n  color: void 0,\n  message: \"\",\n  onClose: void 0,\n  onClick: void 0,\n  onOpened: void 0,\n  duration: 3e3,\n  position: void 0,\n  className: \"\",\n  lockScroll: false,\n  background: void 0\n});\nlet currentOptions = getDefaultOptions();\nconst closeNotify = () => {\n  if (instance) {\n    instance.toggle(false);\n  }\n};\nfunction showNotify(options) {\n  if (!inBrowser) {\n    return;\n  }\n  if (!instance) {\n    initInstance();\n  }\n  options = extend({}, currentOptions, parseOptions(options));\n  instance.open(options);\n  clearTimeout(timer);\n  if (options.duration > 0) {\n    timer = setTimeout(closeNotify, options.duration);\n  }\n  return instance;\n}\nconst setNotifyDefaultOptions = (options) => extend(currentOptions, options);\nconst resetNotifyDefaultOptions = () => {\n  currentOptions = getDefaultOptions();\n};\nexport {\n  closeNotify,\n  resetNotifyDefaultOptions,\n  setNotifyDefaultOptions,\n  showNotify\n};\n"],"mappings":";AAAA,SAASA,WAAW,IAAIC,YAAY,EAAEC,UAAU,IAAIC,WAAW,QAAQ,KAAK;AAC5E,SAASC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB;AAChE,SAASC,cAAc,EAAEC,aAAa,QAAQ,8BAA8B;AAC5E,OAAOC,SAAS,MAAM,cAAc;AACpC,IAAIC,KAAK;AACT,IAAIC,QAAQ;AACZ,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,OAAO;EAAA,OAAKR,QAAQ,CAACQ,OAAO,CAAC,GAAGA,OAAO,GAAG;IAC9DA,OAAO,EAAPA;EACF,CAAC;AAAA;AACD,SAASC,YAAY,GAAG;EAAA,sBAGlBP,cAAc,CAAC;IACjBQ,KAAK,mBAAG;MACN,qBAGIP,aAAa,EAAE;QAFjBQ,KAAK,kBAALA,KAAK;QACLC,MAAM,kBAANA,MAAM;MAER,OAAO;QAAA,OAAMhB,YAAY,CAACQ,SAAS,EAAEN,WAAW,CAACa,KAAK,EAAE;UACtD,eAAe,EAAEC;QACnB,CAAC,CAAC,EAAE,IAAI,CAAC;MAAA;IACX;EACF,CAAC,CAAC;EAXAN,QAAQ,mBAARA,QAAQ;AAYZ;AACA,IAAMO,iBAAiB,GAAG,SAApBA,iBAAiB;EAAA,OAAU;IAC/BC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE,KAAK,CAAC;IACbP,OAAO,EAAE,EAAE;IACXQ,OAAO,EAAE,KAAK,CAAC;IACfC,OAAO,EAAE,KAAK,CAAC;IACfC,QAAQ,EAAE,KAAK,CAAC;IAChBC,QAAQ,EAAE,GAAG;IACbC,QAAQ,EAAE,KAAK,CAAC;IAChBC,SAAS,EAAE,EAAE;IACbC,UAAU,EAAE,KAAK;IACjBC,UAAU,EAAE,KAAK;EACnB,CAAC;AAAA,CAAC;AACF,IAAIC,cAAc,GAAGX,iBAAiB,EAAE;AACxC,IAAMY,WAAW,GAAG,SAAdA,WAAW,GAAS;EACxB,IAAInB,QAAQ,EAAE;IACZA,QAAQ,CAACM,MAAM,CAAC,KAAK,CAAC;EACxB;AACF,CAAC;AACD,SAASc,UAAU,CAACC,OAAO,EAAE;EAC3B,IAAI,CAAC1B,SAAS,EAAE;IACd;EACF;EACA,IAAI,CAACK,QAAQ,EAAE;IACbG,YAAY,EAAE;EAChB;EACAkB,OAAO,GAAG5B,MAAM,CAAC,CAAC,CAAC,EAAEyB,cAAc,EAAEjB,YAAY,CAACoB,OAAO,CAAC,CAAC;EAC3DrB,QAAQ,CAACsB,IAAI,CAACD,OAAO,CAAC;EACtBE,YAAY,CAACxB,KAAK,CAAC;EACnB,IAAIsB,OAAO,CAACR,QAAQ,GAAG,CAAC,EAAE;IACxBd,KAAK,GAAGyB,UAAU,CAACL,WAAW,EAAEE,OAAO,CAACR,QAAQ,CAAC;EACnD;EACA,OAAOb,QAAQ;AACjB;AACA,IAAMyB,uBAAuB,GAAG,SAA1BA,uBAAuB,CAAIJ,OAAO;EAAA,OAAK5B,MAAM,CAACyB,cAAc,EAAEG,OAAO,CAAC;AAAA;AAC5E,IAAMK,yBAAyB,GAAG,SAA5BA,yBAAyB,GAAS;EACtCR,cAAc,GAAGX,iBAAiB,EAAE;AACtC,CAAC;AACD,SACEY,WAAW,EACXO,yBAAyB,EACzBD,uBAAuB,EACvBL,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}