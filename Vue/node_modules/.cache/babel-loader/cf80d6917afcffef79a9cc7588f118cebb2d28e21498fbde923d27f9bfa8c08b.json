{"ast":null,"code":"import _regeneratorRuntime from \"/Users/puzhiqiu/\\u5DE5\\u7A0B\\u9879\\u76EE/HackQuest/HackQuest/vue/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/puzhiqiu/\\u5DE5\\u7A0B\\u9879\\u76EE/HackQuest/HackQuest/vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport useWeb3 from \"../hooks/useWeb3\";\nimport { ref, onMounted, createApp } from \"vue\";\nimport { Field, CellGroup, Notify } from \"vant\";\nexport default {\n  __name: 'MandateView',\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    expose();\n    var _useWeb = useWeb3(),\n      web3 = _useWeb.web3,\n      voteContract = _useWeb.voteContract,\n      getAccount = _useWeb.getAccount;\n    var app = createApp();\n    app.use(Field);\n    app.use(CellGroup);\n\n    // 定义主持人信息\n    var host = ref(\"\");\n    var account = ref(\"\");\n\n    // 获取主持人信息\n    var getHost = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return voteContract.methods.host().call();\n            case 2:\n              host.value = _context.sent;\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function getHost() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 选民地址\n    var voterAddress = ref(\"\");\n    //去除投票人\n    var removeTheAccount = ref(\"\");\n    //投票时间\n    var voteTime = ref(\"0\");\n    // 初始化投票时间\n    var initVoteTime = ref(\"0\");\n    //结束选票\n    var endVoting = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var account;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getAccount();\n            case 2:\n              account = _context2.sent;\n              voteContract.methods.endVoting().send({\n                from: account\n              }).on(\"receipt\", function () {\n                Notify({\n                  type: \"success\",\n                  message: \"结束投票成功\"\n                });\n              }).on(\"error\", function (error) {\n                Notify({\n                  type: \"danger\",\n                  message: \"结束投票失败: \" + error.message\n                });\n              });\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function endVoting() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    // 分发票权\n    var mandate = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var arr, account;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              arr = eval(voterAddress.value);\n              _context3.next = 3;\n              return getAccount();\n            case 3:\n              account = _context3.sent;\n              voteContract.methods.mandate(arr).send({\n                from: account\n              }).on(\"receipt\", function () {\n                Notify({\n                  type: \"success\",\n                  message: \"选票分发成功\"\n                });\n              }).on(\"error\", function (error) {\n                Notify({\n                  type: \"danger\",\n                  message: \"选票分发失败: \" + error.message\n                });\n              });\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      return function mandate() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    // 开始投票\n    var startVoting = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var account;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return getAccount();\n            case 2:\n              account = _context4.sent;\n              voteContract.methods.startVoting(initVoteTime.value) // 假设投票选项为 0\n              .send({\n                from: account\n              }).on(\"receipt\", function () {\n                Notify({\n                  type: \"success\",\n                  message: \"投票成功\"\n                });\n              }).on(\"error\", function (error) {\n                Notify({\n                  type: \"danger\",\n                  message: \"投票失败: \" + error.message\n                });\n              });\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      return function startVoting() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    //去除投票人\n    var removeAccount = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var arr, account;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              arr = eval(removeTheAccount.value);\n              _context5.next = 3;\n              return getAccount();\n            case 3:\n              account = _context5.sent;\n              voteContract.methods.removeVoter(arr) // 假设投票选项为 0\n              .send({\n                from: account\n              }).on(\"receipt\", function () {\n                Notify({\n                  type: \"success\",\n                  message: \"投票人移除成功\"\n                });\n              }).on(\"error\", function (error) {\n                Notify({\n                  type: \"danger\",\n                  message: \"投票人移除失败: \" + error.message\n                });\n              });\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }));\n      return function removeAccount() {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    //获取合约剩余时间\n    var getVoteTime = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return voteContract.methods.leftTime().call();\n            case 2:\n              voteTime.value = _context6.sent;\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }));\n      return function getVoteTime() {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    // 转换秒数为毫秒数\n    var toMilliseconds = function toMilliseconds(seconds) {\n      return seconds * 1000;\n    };\n    onMounted( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return getHost();\n          case 2:\n            _context8.next = 4;\n            return getVoteTime();\n          case 4:\n            setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n              return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n                while (1) switch (_context7.prev = _context7.next) {\n                  case 0:\n                    _context7.next = 2;\n                    return getVoteTime();\n                  case 2:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }, _callee7);\n            })), 1000); // 每秒更新一次\n          case 5:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8);\n    })));\n    var __returned__ = {\n      web3: web3,\n      voteContract: voteContract,\n      getAccount: getAccount,\n      app: app,\n      host: host,\n      account: account,\n      getHost: getHost,\n      voterAddress: voterAddress,\n      removeTheAccount: removeTheAccount,\n      voteTime: voteTime,\n      initVoteTime: initVoteTime,\n      endVoting: endVoting,\n      mandate: mandate,\n      startVoting: startVoting,\n      removeAccount: removeAccount,\n      getVoteTime: getVoteTime,\n      toMilliseconds: toMilliseconds,\n      get useWeb3() {\n        return useWeb3;\n      },\n      ref: ref,\n      onMounted: onMounted,\n      createApp: createApp,\n      get Field() {\n        return Field;\n      },\n      get CellGroup() {\n        return CellGroup;\n      },\n      get Notify() {\n        return Notify;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"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","names":["useWeb3","ref","onMounted","createApp","Field","CellGroup","Notify","web3","voteContract","getAccount","app","use","host","account","getHost","methods","call","value","voterAddress","removeTheAccount","voteTime","initVoteTime","endVoting","send","from","on","type","message","error","mandate","arr","eval","startVoting","removeAccount","removeVoter","getVoteTime","leftTime","toMilliseconds","seconds","setInterval"],"sources":["/Users/puzhiqiu/工程项目/HackQuest/HackQuest/vue/src/views/MandateView.vue"],"sourcesContent":["<template>\n  <div class=\"box1\">\n    <van-divider>Voting system initialization</van-divider>\n    <div class=\"host\">\n      <van-space>\n        <p class=\"label\"><van-icon name=\"manager\" />主持人地址</p>\n        <p class=\"address\">{{ host }}</p>\n      </van-space>\n    </div>\n    <van-divider\n      :style=\"{ color: '#1989fa', borderColor: 'red', padding: '0px 16px' }\"\n    >\n    </van-divider>\n\n    <div>\n      <van-cell-group inset>\n        <van-field\n          v-model=\"voterAddress\"\n          required\n          label=\"投票人地址\"\n          placeholder=\"请输入投票人地址\"\n        />\n      </van-cell-group>\n    </div>\n    <div class=\"btn\">\n      <van-button block @click=\"mandate\">开始分发选票</van-button>\n    </div>\n    <div>\n      <van-cell-group inset>\n        <van-field\n          v-model=\"removeTheAccount\"\n          required\n          label=\"去除投票人\"\n          placeholder=\"请输入去除投票人地址\"\n        />\n      </van-cell-group>\n    </div>\n    <div class=\"btn\">\n      <van-button block @click=\"removeAccount\">去除投票人</van-button>\n    </div>\n    <div>\n      <van-cell-group inset>\n        <van-field\n          v-model=\"initVoteTime\"\n          required\n          label=\"投票时间\"\n          placeholder=\"请输入投票时间\"\n        />\n      </van-cell-group>\n    </div>\n\n    <div class=\"btn\">\n      <van-button block @click=\"startVoting\">开始选票</van-button>\n    </div>\n    <van-divider />\n\n    <div class=\"vote-time\">\n      <p>\n        剩余投票时间:<van-count-down\n          :time=\"toMilliseconds(voteTime)\"\n          format=\"DD 天 HH 时 mm 分 ss 秒\"\n        />\n      </p>\n    </div>\n    <div class=\"btn\">\n      <van-button block @click=\"endVoting\">结束选票</van-button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport useWeb3 from \"../hooks/useWeb3\";\nimport { ref, onMounted, createApp } from \"vue\";\nconst { web3, voteContract, getAccount } = useWeb3();\nimport { Field, CellGroup, Notify } from \"vant\";\n\nconst app = createApp();\napp.use(Field);\napp.use(CellGroup);\n\n// 定义主持人信息\nconst host = ref(\"\");\n\nconst account = ref(\"\");\n\n// 获取主持人信息\nconst getHost = async () => {\n  host.value = await voteContract.methods.host().call();\n};\n\n// 选民地址\nconst voterAddress = ref(\"\");\n//去除投票人\nconst removeTheAccount = ref(\"\");\n//投票时间\nconst voteTime = ref(\"0\");\n// 初始化投票时间\nconst initVoteTime = ref(\"0\");\n//结束选票\nconst endVoting = async () => {\n  const account = await getAccount();\n  voteContract.methods\n    .endVoting()\n    .send({ from: account })\n    .on(\"receipt\", () => {\n      Notify({ type: \"success\", message: \"结束投票成功\" });\n    })\n    .on(\"error\", (error) => {\n      Notify({ type: \"danger\", message: \"结束投票失败: \" + error.message });\n    });\n};\n\n// 分发票权\nconst mandate = async () => {\n  const arr = eval(voterAddress.value);\n  const account = await getAccount();\n  voteContract.methods\n    .mandate(arr)\n    .send({ from: account })\n    .on(\"receipt\", () => {\n      Notify({ type: \"success\", message: \"选票分发成功\" });\n    })\n    .on(\"error\", (error) => {\n      Notify({ type: \"danger\", message: \"选票分发失败: \" + error.message });\n    });\n};\n// 开始投票\nconst startVoting = async () => {\n  const account = await getAccount();\n  voteContract.methods\n    .startVoting(initVoteTime.value) // 假设投票选项为 0\n    .send({ from: account })\n    .on(\"receipt\", () => {\n      Notify({ type: \"success\", message: \"投票成功\" });\n    })\n    .on(\"error\", (error) => {\n      Notify({ type: \"danger\", message: \"投票失败: \" + error.message });\n    });\n};\n//去除投票人\nconst removeAccount = async () => {\n  const arr = eval(removeTheAccount.value);\n  const account = await getAccount();\n  voteContract.methods\n    .removeVoter(arr) // 假设投票选项为 0\n    .send({ from: account })\n    .on(\"receipt\", () => {\n      Notify({ type: \"success\", message: \"投票人移除成功\" });\n    })\n    .on(\"error\", (error) => {\n      Notify({ type: \"danger\", message: \"投票人移除失败: \" + error.message });\n    });\n};\n//获取合约剩余时间\nconst getVoteTime = async () => {\n  voteTime.value = await voteContract.methods.leftTime().call();\n};\n\n// 转换秒数为毫秒数\nconst toMilliseconds = (seconds) => {\n  return seconds * 1000;\n};\n\nonMounted(async () => {\n  await getHost();\n  await getVoteTime();\n  setInterval(async () => {\n    await getVoteTime();\n  }, 1000); // 每秒更新一次\n});\n</script>\n\n<style scoped>\n.box1 {\n  padding: 20px;\n}\n\n.vote-time {\n  margin: 20px 0;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}